name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  # apply various linters
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
            sudo apt-get install shellcheck
            sudo apt-get install jsonlint
            sudo apt-get install lacheck
            sudo apt-get install chktex
            sudo snap install mdl
            pip install -r requirements/requirements.txt

      - name: Bash linter (shellcheck)
        working-directory: ./src/test/linter
        run: bash bash_linter.sh

      - name: JSON linter (jsonlint)
        working-directory: ./src/test/linter
        run: bash json_linter.sh

      - name: Latex linter (lacheck, chktex)
        working-directory: ./src/test/linter
        run: bash latex_linter.sh

      - name: Markdown linter (mdl)
        working-directory: ./src/test/linter
        run: bash markdown_linter.sh

      - name: Python linter (pycodestyle, mccabe)
        working-directory: ./src/test/linter
        run: bash python_linter.sh

  # test the Python code
  test:
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
            sudo apt-get install -y python3-pip
            pip install pytest
            pip install coverage

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Unittest code
        working-directory: ./src/test/unit_tests
        run: bash run_unit_tests.sh

  # build the PDF output of the analysis pipeline
  build_pdf:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
            sudo apt-get install python3-docopt
            sudo apt-get install python3-pip
            pip install json2latex

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Execute stage 1
        working-directory: ./src/main/code
        run: ./stage01.py -k demo -i US0378331005

      - name: Execute stage 2
        working-directory: ./src/main/code
        run: ./stage02.py -i US0378331005

      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          working_directory: ./src/main/build/US0378331005
          root_file: main.tex
          args: -interaction=nonstopmode -outdir=build -pdf -halt-on-error main

      - name: Upload PDF output as artifact
        uses: actions/upload-artifact@v4
        with:
          name: PDF
          path: ./src/main/build/US0378331005/build/main.pdf
 
  # build the PDF of the handbook 
  build_handbook:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          working_directory: ./src/main/resources/handbook
          root_file: main.tex
          args: -interaction=nonstopmode -outdir=build -pdf -halt-on-error main

      - name: Upload handbook PDF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: HANDBOOK
          path: ./src/main/resources/handbook/build/main.pdf
